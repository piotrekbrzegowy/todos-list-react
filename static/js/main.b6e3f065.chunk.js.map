{"version":3,"sources":["Form/styled.js","Form/index.js","Tasks/styled.js","Tasks/index.js","Buttons/styled.js","Buttons/index.js","Section/styled.js","Section/index.js","Header/index.js","Container/styled.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["StyledForm","styled","form","Input","input","Button","button","Form","addnewTask","useState","newTaskContent","setNewTaskContent","onSubmit","event","preventDefault","trim","value","onChange","target","placeholder","required","List","ul","Item","li","hidden","css","Content","span","done","toggleDone","remove","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","onClick","id","content","Wrapper","div","disabled","Buttons","toggleHideDone","setAllDone","length","every","section","Header","header","Heading","h2","special","Body","Section","title","body","extraHeaderContent","StyledContainer","main","Container","children","App","setHideDone","tasksFromLocalStorage","localStorage","getItem","JSON","parse","setTasks","useEffect","setItem","stringify","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6e3f065.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n    display: grid;\r\n    grid-template-columns: 1fr auto;\r\n    grid-gap: 20px;\r\n\r\n    @media(max-width:767px) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    padding: 10px;\r\n    border: 1px solid #ddd;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    padding: 10px;\r\n    cursor: pointer;\r\n    background-color: hsl(180, 100%, 25%);\r\n    color: white;\r\n    border: none;\r\n    transition: 0.5s;\r\n\r\n    &:hover {\r\n        background-color: hsl(180, 100%, 30%);\r\n        transform: scale(1.05);\r\n    }\r\n`;","import { useState } from \"react\";\r\nimport { StyledForm, Input, Button } from \"./styled\";\r\n\r\nconst Form = ({ addnewTask }) => {\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        addnewTask(newTaskContent.trim());\r\n        setNewTaskContent(\"\");\r\n    };\r\n\r\n    return (\r\n        <StyledForm onSubmit={onFormSubmit}>\r\n            <Input\r\n                value={newTaskContent}\r\n                onChange={({ target }) => setNewTaskContent(target.value)}\r\n                placeholder=\"Co jest do zrobienia?\"\r\n                required\r\n            />\r\n            <Button>Dodaj zadanie</Button>\r\n        </StyledForm>\r\n    );\r\n};\r\n\r\nexport default Form;","import styled, { css } from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n    list-style: none;\r\n    margin: 0;\r\n    padding: 0;\r\n    word-break: break-word;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n    display: grid;\r\n    grid-template-columns: auto 1fr auto;\r\n    grid-gap: 10px;\r\n    align-items: center;\r\n    padding: 10px;\r\n    border-bottom: 1px solid #ddd;\r\n\r\n    ${({ hidden }) => hidden && css`\r\n        display: none;\r\n    `}\r\n`;\r\n\r\nexport const Content = styled.span`\r\n    ${({ done }) => done && css`\r\n        text-decoration: line-through;\r\n    `} \r\n`;\r\n\r\nexport const Button = styled.button`\r\n    border: none;\r\n    color: white;\r\n    width: 30px;\r\n    height: 30px;\r\n    padding: 0;\r\n\r\n    ${({ toggleDone }) => toggleDone && css`\r\n        background-color: hsl(120, 61%, 34%);\r\n        transition: 0.5s;\r\n\r\n        &:hover {\r\n            background-color: hsl(120, 61%, 39%);\r\n        }\r\n    `}\r\n\r\n    ${({ remove }) => remove && css`\r\n        background-color: hsl(348, 83%, 47%);\r\n        transition: 0.5s;\r\n\r\n        &:hover {\r\n            background-color: hsl(348, 83%, 52%);\r\n        }\r\n    `}\r\n`;","import { List, Item, Content, Button } from \"./styled\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n    <List>\r\n        {tasks.map(task => (\r\n            <Item\r\n                key={task.id}\r\n                hidden={task.done && hideDone}\r\n            >\r\n                <Button\r\n                    toggleDone\r\n                    onClick={() => toggleTaskDone(task.id)}\r\n                >\r\n                    {task.done ? \"âœ”\" : \"\"}\r\n                </Button>\r\n                <Content done={task.done}>\r\n                    {task.content}\r\n                </Content>\r\n                <Button\r\n                    onClick={() => removeTask(task.id)}\r\n                    remove\r\n                >\r\n                    ðŸ—‘\r\n                </Button>\r\n            </Item>\r\n        ))}\r\n    </List>\r\n);\r\n\r\nexport default Tasks;","import styled, { css } from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    margin: 0 20px 0 0;\r\n    display: grid;\r\n    grid-template-columns: auto auto;\r\n    grid-gap: 20px;\r\n\r\n    @media(max-width:767px) {\r\n        grid-template-columns: 1fr;\r\n        margin: 0 20px 20px 20px;\r\n    }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    border: none;\r\n    cursor: pointer;\r\n    background-color: transparent;\r\n    color: hsl(180, 100%, 25%);\r\n    transition: 0.5s;\r\n\r\n    &:hover {\r\n        color: hsl(180, 100%, 30%);\r\n    }\r\n\r\n    ${({ disabled }) => disabled && css`\r\n        color: #ccc;\r\n        cursor: not-allowed;\r\n    `}\r\n`;","import React from \"react\"\r\nimport { Wrapper, Button } from \"./styled\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n    <Wrapper>\r\n        {tasks.length > 0 && (\r\n            <>\r\n                <Button\r\n                    onClick={toggleHideDone}\r\n                >\r\n                    {hideDone ? \"PokaÅ¼\" : \"Ukryj\"} ukoÅ„czone\r\n                </Button>\r\n                <Button\r\n                    onClick={setAllDone}\r\n                    disabled={tasks.every(({ done }) => done)}\r\n                >\r\n                    UkoÅ„cz wszystkie\r\n                </Button>\r\n            </>\r\n        )}\r\n    </Wrapper>\r\n);\r\n\r\nexport default Buttons;","import styled, { css } from \"styled-components\";\r\n\r\nexport const Wrapper = styled.section`\r\n    background-color: #fff;\r\n    margin: 10px 0;\r\n    box-shadow: 0 0 5px #ddd;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n    display: grid;\r\n    grid-template-columns: 1fr auto;\r\n    align-items: center;\r\n    border-bottom: 1px solid #ddd;\r\n\r\n    @media(max-width:767px) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nexport const Heading = styled.h2`\r\n    font-size: 20px;\r\n    padding: 20px;\r\n    margin: 0;\r\n\r\n    ${({ special }) => special && css`\r\n        border-bottom: 1px solid #ddd;\r\n    `}\r\n`;\r\n\r\nexport const Body = styled.div`\r\n    padding: 20px;\r\n`;","import { Wrapper, Header, Heading, Body } from \"./styled\";\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n    <Wrapper>\r\n        <Header>\r\n            <Heading>{title}</Heading>\r\n            {extraHeaderContent}\r\n        </Header>\r\n        <Body>{body}</Body>\r\n    </Wrapper>\r\n);\r\n\r\nexport default Section;","const Header = ({title}) => (\r\n    <header>\r\n        <h1>{title}</h1>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled.main`\r\n    max-width: 900px;\r\n    padding: 20px;\r\n    margin: 0 auto;\r\n`;","import { StyledContainer } from \"./styled\";\r\n\r\nconst Container = ({children}) => (\r\n    <StyledContainer>{children}</StyledContainer>\r\n);\r\n    \r\nexport default Container;","import Form from \"./Form\";\r\nimport Tasks from \"./Tasks\";\r\nimport Buttons from \"./Buttons\";\r\nimport Section from \"./Section\";\r\nimport Header from \"./Header\";\r\nimport Container from \"./Container\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction App() {\r\n  const [hideDone, setHideDone] = useState(false);\r\n  \r\n  const tasksFromLocalStorage = localStorage.getItem(\"tasks\");\r\n\r\n  const [tasks, setTasks] = useState(\r\n    tasksFromLocalStorage\r\n    ? JSON.parse(tasksFromLocalStorage)\r\n    : []\r\n  );\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const toggleHideDone = () => {\r\n    setHideDone(hideDone => !hideDone);\r\n  };\r\n\r\n  const removeTask = (id) => {\r\n    setTasks(tasks => tasks.filter(task => task.id !== id));\r\n  };\r\n\r\n  const toggleTaskDone = (id) => {\r\n    setTasks(tasks => tasks.map(task => {\r\n      if (task.id === id) {\r\n        return { ...task, done: !task.done };\r\n      }\r\n\r\n      return task;\r\n    }));\r\n  };\r\n\r\n  const setAllDone = () => {\r\n    setTasks(tasks => tasks.map(task => ({\r\n      ...task,\r\n      done: true,\r\n    })));\r\n  };\r\n\r\n  const addNewTask = (content) => {\r\n    if (content === (\"\")) {\r\n      return null;\r\n    };\r\n\r\n      setTasks(tasks => [\r\n        ...tasks,\r\n        {\r\n          content,\r\n          done: false,\r\n          id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\r\n        },\r\n      ]);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Header title=\"Lista zadaÅ„\" />\r\n      <Section\r\n        title=\"Dodaj nowe zadanie\"\r\n        body={<Form addnewTask={addNewTask} />}\r\n      />\r\n\r\n      <Section\r\n        title=\"Lista zadaÅ„\"\r\n        body={\r\n          <Tasks\r\n            tasks={tasks}\r\n            hideDone={hideDone}\r\n            removeTask={removeTask}\r\n            toggleTaskDone={toggleTaskDone}\r\n          />\r\n        }\r\n        extraHeaderContent={\r\n          <Buttons\r\n            tasks={tasks}\r\n            hideDone={hideDone}\r\n            toggleHideDone={toggleHideDone}\r\n            setAllDone={setAllDone}\r\n          />\r\n        }\r\n      />\r\n\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}